type Time = int;
type LockContractInit = 
 record {
   durationTime: nat;
   durationUnit: nat;
   meta: vec text;
   poolId: text;
   poolName: text;
   positionId: nat;
   provider: text;
 };
type LockContract = 
 record {
   created: Time;
   durationTime: nat;
   durationUnit: nat;
   meta: vec text;
   poolId: text;
   poolName: text;
   positionId: nat;
   positionOwner: principal;
   provider: text;
   status: variant {
             locked;
             unlocked;
           };
 };
service : {
  addAdmin: (text) -> ();
  createContract: (LockContractInit) -> (text);
  cycleBalance: () -> (nat) query;
  getAllAdmins: () -> (vec text) query;
  getAllContracts: () -> (vec record {
                                text;
                                LockContract;
                              }) query;
  getContract: (text) -> (opt LockContract) query;
  getContracts: (nat) -> (vec LockContract) query;
  getOwner: (text) -> (opt text) query;
  getTotalContract: () -> (nat) query;
  getUserContracts: (text, nat) -> (vec LockContract) query;
  getUserTotalTokens: (text) -> (nat) query;
  removeAdmin: (text) -> ();
  updateInitCycles: (nat) -> ();
}
